libos.entrypoint = "/usr/bin/stress-ng" 

loader.log_level = "error"
loader.pal_internal_mem_size = "512MB"
sys.stack.size = "8M"
sgx.enclave_size = "4G"
sgx.thread_num = 512

sgx.nonpie_binary = 1
loader.insecure__use_cmdline_argv = 1
loader.insecure__use_host_env = 1
loader.insecure__disable_aslr = 1

loader.preload = "file:{{ graphene.libos }}"
loader.env.PATH = "/usr/bin:/bin"
loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr/lib/x86_64-linux-gnu"

fs.mount.lib.type = "chroot"
fs.mount.lib.path = "/lib"
fs.mount.lib.uri = "file:{{ graphene.runtimedir() }}"

fs.mount.bin.type = "chroot"
fs.mount.bin.path = "/bin"
fs.mount.bin.uri = "file:/bin"

fs.mount.lib2.type = "chroot"
fs.mount.lib2.path = "{{ arch_libdir }}"
fs.mount.lib2.uri = "file:{{ arch_libdir }}"

fs.mount.lib3.type = "chroot"
fs.mount.lib3.path = "/usr/{{ arch_libdir }}"
fs.mount.lib3.uri = "file:/usr/{{ arch_libdir }}"

fs.mount.tmp.type = "chroot"
fs.mount.tmp.path = "/tmp"
fs.mount.tmp.uri = "file:/tmp"

#fs.mount.sys.type = "chroot"
#fs.mount.sys.path = "/sys"
#fs.mount.sys.uri = "file:/sys"

fs.mount.stressng.type = "chroot"
fs.mount.stressng.path = "/usr/bin"
fs.mount.stressng.uri  = "file:/usr/bin"

sgx.file_check_policy = "allow_all_but_log"
sgx.allowed_files.tmpfiles = "file:."
sgx.allowed_file.usrlibfiles = "file:/usr/{{ arch_libdir }}"
sgx.allowed_file.libfiles = "file:{{ arch_libdir }}"
sgx.allowed_files.sysfiles = "file:/sys"

sgx.trusted_files.stressng = "file:/usr/bin/stress-ng"
sgx.trusted_files.ld = "file:{{ graphene.runtimedir() }}/ld-linux-x86-64.so.2"
sgx.trusted_files.libc = "file:{{ graphene.runtimedir() }}/libc.so.6"
sgx.trusted_files.libm = "file:{{ graphene.runtimedir() }}/libm.so.6"
sgx.trusted_files.libdl = "file:{{ graphene.runtimedir() }}/libdl.so.2"
sgx.trusted_files.librt = "file:{{ graphene.runtimedir() }}/librt.so.1"
sgx.trusted_files.libutil = "file:{{ graphene.runtimedir() }}/libutil.so.1"
sgx.trusted_files.libpthread = "file:{{ graphene.runtimedir() }}/libpthread.so.0"
sgx.trusted_files.libnsscompat = "file:{{ arch_libdir }}/libnss_compat.so.2"
sgx.trusted_files.libnssfiles = "file:{{ arch_libdir }}/libnss_files.so.2"
sgx.trusted_files.libnssnis = "file:{{ arch_libdir }}/libnss_nis.so.2"
sgx.trusted_files.libz = "file:{{ arch_libdir }}/libz.so.1"
sgx.trusted_files.libzstd = "file:/usr/{{ arch_libdir }}/libzstd.so.1"
sgx.trusted_files.libpixman = "file:/usr/{{ arch_libdir }}/libpixman-1.so.0"
sgx.trusted_files.libstdcpp = "file:/usr/{{ arch_libdir }}/libstdc++.so.6"
sgx.trusted_files.libgcc_s = "file:{{ arch_libdir }}/libgcc_s.so.1"

